# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    app.user.success_handler.class: AppBundle\Authentication\SuccessHandler

services:
    app.form.type.image:
        class: AppBundle\Form\Type\ImageType
        tags:
            - { name: form.type, alias: image }

    app.listener.image.post_load:
        class: AppBundle\EventListener\SetRealPathFile
        arguments: [@request_stack]
        tags:
            - { name: doctrine.event_listener, event: postLoad }

    app.user.success_handler:
        class: %app.user.success_handler.class%
        arguments: [@router]
        calls:
          - [setBackendUserRoles, [['ROLE_ADMIN', 'ROLE_SUPER_ADMIN']]]
          - [setAppProUserRoles, [['ROLE_EMPLOYEE']]]

    app.availability.finder:
        class: AppBundle\Availability\AvailabilityFinder
        arguments:
          - @=service('doctrine.orm.default_entity_manager').getRepository('AppBundle:Booking')
          - @=service('doctrine.orm.default_entity_manager').getRepository('AppBundle:Employee')

    app.user.employee_provider:
        class: AppBundle\Security\UserProvider
        arguments:
            - @app.user.user_manager.employee

    app.user.customer_provider:
        class: AppBundle\Security\UserProvider
        arguments:
            - @app.user.user_manager.customer

    app.user.user_manager.customer:
        class: AppBundle\Doctrine\UserManager
        arguments:
            - @security.encoder_factory
            - @doctrine.orm.default_entity_manager
            - AppBundle\Entity\Customer

    app.user.user_manager.employee:
        class: AppBundle\Doctrine\UserManager
        arguments:
            - @security.encoder_factory
            - @doctrine.orm.default_entity_manager
            - AppBundle\Entity\Employee

    app.user.user_listener:
        class: AppBundle\Doctrine\Orm\UserListener
        public: false
        arguments:
            - @service_container
        tags:
            - { name: doctrine.event_subscriber, connection: default }